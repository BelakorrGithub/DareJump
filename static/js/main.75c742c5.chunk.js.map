{"version":3,"sources":["App.module.css","App.js","index.js"],"names":["module","exports","Player","PlaygroundWrapper","Playground","PLAYER_WIDTH","STEP","JUMP_HEIGHT","FLOOR_LEVEL","App","_useState","useState","_useState2","Object","slicedToArray","posX","setPosX","_useState3","_useState4","posY","setPosY","containerRef","useRef","useEffect","eventListener","event","screenWidth","current","clientWidth","key","Math","min","max","setTimeout","document","addEventListener","removeEventListener","react_default","a","createElement","className","styles","ref","style","left","bottom","ReactDOM","render","src_App","getElementById"],"mappings":"2EACAA,EAAAC,QAAA,CAAkBC,OAAA,oBAAAC,kBAAA,+BAAAC,WAAA,4HCEZC,EAAe,GACfC,EAAO,GACPC,EAAc,GACdC,EAAc,GA2CLC,MAzCf,WAAe,IAAAC,EACWC,mBAAS,IADpBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNK,EADMH,EAAA,GACAI,EADAJ,EAAA,GAAAK,EAEWN,mBAAS,IAFpBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAENE,EAFMD,EAAA,GAEAE,EAFAF,EAAA,GAGPG,EAAeC,iBAAO,MA2B5B,OA1BAC,oBAAU,WACR,IAAMC,EAAgB,SAAAC,GACpB,IAAMC,EAAcL,EAAaM,QAAQC,YAEvB,eAAdH,EAAMI,KAAwBd,EAAOW,EAAcrB,EACrDW,EAAQc,KAAKC,IAAIhB,EAAOT,EAAMoB,EAAcrB,IAErB,cAAdoB,EAAMI,KAAuBd,EAAO,EAC7CC,EAAQc,KAAKE,IAAIjB,EAAOT,EAAM,IAEP,MAAdmB,EAAMI,KAA6B,YAAdJ,EAAMI,MACpCT,EAAQD,EAAOZ,GAKf0B,WAAW,WACTb,EAAQZ,IACP,OAIP,OADA0B,SAASC,iBAAiB,UAAWX,GAC9B,WACLU,SAASE,oBAAoB,UAAWZ,KAEzC,CAACT,EAAMI,EAAME,IAEdgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOtC,mBACrBkC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOrC,WAAYsC,IAAKrB,GACtCgB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOvC,OAAQyC,MAAO,CAAEC,KAAM7B,EAAM8B,OAAQ1B,SCtCtE2B,IAASC,OAAOV,EAAAC,EAAAC,cAACS,EAAD,MAASd,SAASe,eAAe","file":"static/js/main.75c742c5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Player\":\"App_Player__1cmvK\",\"PlaygroundWrapper\":\"App_PlaygroundWrapper__3fXHM\",\"Playground\":\"App_Playground__kojSG\"};","import React, { useState, useEffect, useRef } from 'react'\r\nimport styles from './App.module.css'\r\n\r\nconst PLAYER_WIDTH = 32\r\nconst STEP = 10\r\nconst JUMP_HEIGHT = 40\r\nconst FLOOR_LEVEL = 40\r\n\r\nfunction App() {\r\n  const [posX, setPosX] = useState(50)\r\n  const [posY, setPosY] = useState(40)\r\n  const containerRef = useRef(null)\r\n  useEffect(() => {\r\n    const eventListener = event => {\r\n      const screenWidth = containerRef.current.clientWidth\r\n      // Moves right only if didn't reach the end of the screen\r\n      if (event.key === 'ArrowRight' && posX < screenWidth - PLAYER_WIDTH) {\r\n        setPosX(Math.min(posX + STEP, screenWidth - PLAYER_WIDTH))\r\n        // Moves left only if didn't reach the end of the screen\r\n      } else if (event.key === 'ArrowLeft' && posX > 0) {\r\n        setPosX(Math.max(posX - STEP, 0))\r\n        // Jump when pressing space or up arrow key\r\n      } else if (event.key === ' ' || event.key === 'ArrowUp') {\r\n        setPosY(posY + JUMP_HEIGHT)\r\n        // This is definitely not the best way of falling back to the ground\r\n        // I was thinking perhaps we should create the movement by looping pixel by pixel until reaching the step/jump amount.\r\n        // This way we would have way more control over collisions and transitions time.\r\n        // Also we need gravity-effect\r\n        setTimeout(() => {\r\n          setPosY(FLOOR_LEVEL)\r\n        }, 200) // This amount is matching the transiton time on CSS creating the illusion of a smoother movement\r\n      }\r\n    }\r\n    document.addEventListener('keydown', eventListener)\r\n    return () => {\r\n      document.removeEventListener('keydown', eventListener)\r\n    }\r\n  }, [posX, posY, containerRef])\r\n  return (\r\n    <div className=\"App\">\r\n      <div className={styles.PlaygroundWrapper}>\r\n        <div className={styles.Playground} ref={containerRef}>\r\n          <div className={styles.Player} style={{ left: posX, bottom: posY }} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}